
"""
Цепочки if-elif-else.

Нередко в программе требуется проверять более двух возможных ситуаций. Для таких ситуаций в Python предусмотрен
синтаксис if-elif-else. Python выполняет только один блок в цепочке if-elif-else. Все условия проверяются по порядку до
тех пор, пока одно из них не даст истинный результат. Далее выполняется код, следующий за этим условием, а все
остальные проверки Python пропускает.
Во многих реальных ситуациях существует более двух возможных результатов. Есть парк атракционов, который взимает плату
за вход для разных возрастных групп:
    для посетителей младше 4 лет вход бесплатный;
    для посетителей от 4 до 18 лет билет стоит $5;
    для посетителей от 18 лет и старше билет стоит $10.
Как использовать команду if для определения платы за вход? Следующий код определяет, к какой возрастной категории
относится посетитель, и выводит сообщение со стоимостью билета.
"""
age = 19

if age < 4:
    print("Стоимость вашего входного билета составляет $0.")
elif age < 18:
    print("Стоимость вашего входного билета составляет $5.")
else:
    print("Стоимость вашего входного билета составляет $10.")

"""
Вместо того чтобы выводить сообщение с ценой билета в блоках if-elif-else, лучше использовать другое, более 
компактное решение - присвоить цену в цепочке if-elif-else, а затем добавить одну команду print() после выполнения 
цепочки:
"""

age = 12

if age < 4:
    # присвоим переменной значение цены
    price = 0
elif age < 18:
    price = 5
else:
    price = 10

# Так как конкатенация возможна только строковых элементов,
# то выводимое значение переменной нужно преобразовать в строку при помощи функции str()
print("\nСтоимость вашего входного билета составляет $" + str(price) + ".")

"""
Этот пример выводит тот же результат, что и предыдущий, но цепочка if-elif-else имеет более чёткую специализацию. 
Вместо того чтобы определять цену и выводить сообщения, она просто определяет цену билета. Кроме повышения 
эффективности, у этого кода есть дополнительное преимущество - лучшая изменяемость. Чтобы изменить текст выходного 
сообщения, достаточно будет отредоктировать всего одну команду print() - вместо трёх разных команд.
"""