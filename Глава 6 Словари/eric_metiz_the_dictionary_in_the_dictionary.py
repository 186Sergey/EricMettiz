"""
Словарь в словаре.
Словарь также можно вложить в другой словарь, но в таких случаях код быстро усложняется. Например, если на сайте есть
несколько пользователей с уникальными именами, вы можете использовать имена пользователей как ключи в словаре.
Информация о каждом пользователе при этом хранится в словаре, который используется как значение, связанное с именем. В
следующем примере о каждом пользователе хранится три вида информации - имя, фамилия и место жительства. Чтобы получить
доступ к этой информации, переберите имена пользователей и словарь с информацией, связанной с каждым именем:
"""

users = {
    'aeinstein': {
        'first': 'albert',
        'last': 'einstein',
        'location': 'princeton',
    },
    'mcurie': {
        'first': 'marie',
        'last': 'curie',
        'location': 'paris',
    },
}

for username, user_info in users.items():
    print("\nUsername: " + username)
    full_name = user_info['first'] + " " + user_info['last']
    location = user_info['location']
    print("\tFull name: " + full_name.title())
    print("\tLocation: " + location.title())

"""
В программе определяется словарь с именем users, содержащий два ключа: для пользователей "aeinstein" и "mcurie". 
Значение, связанное с каждым ключом, представляет собой словарь с именем, фамилией и местом жительства пользователя. 
В процессе перебора словаря users, Python сохраняет каждый ключ в переменной username, а словарь, связанный с каждым 
именем пользователя, сохраняется в переменной user_info. Внутри основного цикла в словаре выводится имя пользователя.
Переменная user_info, содержащая словарь с информацией о пользователе, содержит три ключа: 'first', 'last' и 
'location'. Каждый ключ используется для построения аккуратно отформатированных данных с полным именем и местом 
жительства пользователя, и последующим выводом сводки известной информации о пользователе. Обратите внимание на 
идентичность структур словарей всех пользователей. Хотя Python этого и не требует, наличие единой структуры упрощает 
работу с вложенными словарями. Если словари разных пользователей будут содержать разные ключи, то код в цикле for 
заметно усложнится.
"""